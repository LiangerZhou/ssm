<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的 
	例如namespace="com.liang.mapper.userMapper"就是com.liang.mapper(包名)+userMapper(userMapper.xml文件去除后缀) -->
<mapper namespace="com.liang.mapper.ContractDetailMapper">
	<!-- 在select标签中编写查询的SQL语句， 设置select标签的id属性为getUser，id属性值必须是唯一的，不能够重复 使用parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型 
		resultType="com.liang.entity.User"就表示将查询结果封装成一个User类的对象返回 User类就是users表所对应的实体类 -->
	<!-- 根据id查询得到一个user对象 -->
	<select id="getContDetail" parameterType="long" resultType="com.liang.entity.ContractDetail">
		select * from contract_detail where ctdId = #{ctdId}
	</select>

	<!-- 创建用户(Create) -->
	<insert id="addContDetail" parameterType="com.liang.entity.ContractDetail">
		insert into contract_detail(high,middle,low) values(#{high},#{middle},#{low})
	</insert>

	<!-- 删除用户(Remove) -->
	<delete id="deleteContDetail" parameterType="long">
		delete from contract_detail where ctdId=#{ctdId}
	</delete>

	<!-- 修改用户(Update) -->
	<update id="updateContDetail" parameterType="com.liang.entity.ContractDetail">
		update contract_detail set high=#{high},middle=#{middle},low=#{low} where ctdId=#{ctdId}
	</update>

	<!-- 查询全部用户 -->
	<select id="getContDtails" resultType="com.liang.entity.ContractDetail">
		select * from contract_detail
	</select>
</mapper>